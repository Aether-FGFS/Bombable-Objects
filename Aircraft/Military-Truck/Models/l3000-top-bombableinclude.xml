<?xml version="1.0"?>

<PropertyList>
    <!-- Nasal code -->

  <load>
    <![CDATA[
    # For a deeper explaination of Parameters, see bombableinclude.txt


    print("Loading truck ", cmdarg().getPath());

    #Set Truck Variant
    var nodeName=cmdarg().getPath();
    setprop (""~nodeName~"/sim/model/variant",2); # Basic with Tarp Roof

    ##checks whether it has been initialized already; if so, just return
    if ( bombable.check_overall_initialized (nodeName) ) return;
            
    ############################################
    #TRUCK INITIALIZER
    var truck_init = func() {
      # Datas of this truck are under: cmdarg().getPath()
      var nodeName = cmdarg().getPath();
      var node = props.globals.getNode(nodeName);
  #    node.getNode("bombable/texture-corps-path", 1).setValue("Anything");

        # INITIALIZE BOMBABLE
        # 
         
        thisNodeName = cmdarg().getPath(); 

        var bombableObject = {  
          
          
          objectNodeName : thisNodeName,
          objectNode : props.globals.getNode(thisNodeName),
          updateTime_s : 2/3, 
                      
          # ALTITUDE DEFINITIONS
          #         
          # all in meters
        
          altitudes : {    
            wheelsOnGroundAGL_m : -0.1 , 
            
            minimumAGL_m : 0, 
            maximumAGL_m : 0,        
            crashedAGL_m : -0.2, 
          },
          #  
          #########################################
          # VELOCITIES DEFINITIONS
          # 
          velocities : {               
            maxSpeedReduce_percent : 5.31, 
            minSpeed_kt : 0,
            
            cruiseSpeed_kt : 25, 
            
            attackSpeed_kt : 45, 
                                 
            
            maxSpeed_kt : 55,
    
            damagedAltitudeChangeMaxRate_meterspersecond : 0.00, 
          },
          #  
          #########################################
          # EVASION DEFINITIONS
          # 
          # The evasion system makes the AI aircraft dodge when they come under
          # fire. 
          evasions : {               
            dodgeDelayMax_sec : 6, 
            dodgeDelayMin_sec : 2, 
            dodgeMax_deg : 15, 
            dodgeMin_deg : 5, 
            rollRateMax_degpersec : 1,             
            dodgeROverLPreference_percent : 50, 
            dodgeAltMin_m : 0, 
            dodgeAltMax_m : 0, 
          }, 
  
          #  
          #########################################
          # ATTACK DEFINITIONS
          # 
          # The attack system makes the AI aircraft turn and fly towards 
          # other aircraft 
          attacks : {               
            maxDistance_m : 5000, 
            minDistance_m : 1, 
              
            
            continueAttackAngle_deg : 60, 
            altitudeHigherCutoff_m : 5000, 
            altitudeLowerCutoff_m : 5000, 
            rollMin_deg : 3, 
            rollMax_deg : 7, 
            rollRateMax_degpersec : 1, 
            climbPower : 0, 
            divePower : 0,           
            attackCheckTime_sec : 10, 
            attackCheckTimeEngaged_sec : 1,               
    
          },
          #  
          #########################################
          # WEAPONS DEFINITIONS
          # 
          # The weapons system makes the AI aircraft fire on the main aircraft 

          weapons : {

          },  
                             
          #  
          #########################################
          # DIMENSION DEFINITIONS
          # 
          # all in meters          
          #           
          dimensions : {                  
            width_m : 2.1,  
            length_m : 6.1, 
            height_m : 2.24, 
            damageRadius_m : 3, 
            vitalDamageRadius_m : 1.5, 
          },
          #
          #########################################
          # VULNERABILITIES DEFINITIONS        
          #
          vulnerabilities : {                   
            damageVulnerability : 50, 
            
            engineDamageVulnerability_percent : 20, 
            
            fireVulnerability_percent : 80,                        
            
            fireDamageRate_percentpersecond : 1.2, 
            
            fireExtinguishMaxTime_seconds : 10, 
            
            fireExtinguishSuccess_percentage : 23, 
            
            explosiveMass_kg : 9000 , 
          },
          #
          #########################################
          # LIVERY DEFINITIONS
          #
          # Path to livery files to use at different damage levels.
          #                                                            
         damageLiveries : {
           damageLivery : [  nil,
                             nil, 
                             nil,
                          ]                        
          },
                            
        };

        #########################################
        # INITIALIZE ROUTINES
        # 
        # OVERALL INITIALIZER: Needed to make all the others work
        bombable.initialize ( bombableObject );
        #
        # LOCATION: Relocate object to maintain its position after file/reset       
        bombable.location_init ( thisNodeName );
        #
        # GROUND: Keep object at altitude relative to ground level
        bombable.ground_init ( thisNodeName );
        #
        # BOMBABLE: Make the object bombable/damageable        
        bombable.bombable_init ( thisNodeName );
        #
        # WEAPONS: Make the object shoot the main aircraft        
        bombable.weapons_init ( thisNodeName );        
        #
        # SMOKE/CONTRAIL: Start a flare, contrail, smoke trail, or exhaust 
        # trail for the object.
        # Smoke types available: flare, jetcontrail, pistonexhaust, smoketrail,
        # damagedengine                        
        bombable.startSmoke("flare", thisNodeName );
        #
        # END INITIALIZE BOMBABLE
        ########################################################################
        ########################################################################                
          


            
                
            };
  #    init_m1_dialogs ();
            truck_init();
            ]]>
        </load>
        <unload>
            <![CDATA[
            print("Unload truck.");
            
        ########################################################################
      ########################################################################                
            # BOMBABLE DESTRUCTORS                  
            #             
      var nodeName= cmdarg().getPath();  
      bombable.de_overall_initialize( nodeName );      
      bombable.initialize_del( nodeName );
      bombable.ground_del( nodeName );
      bombable.location_del (nodeName);      
      bombable.bombable_del( nodeName );
      bombable.weapons_del (nodeName);      
      #
        ########################################################################
      ########################################################################                
      
      
#  </unload>

            ]]>
        </unload>

</PropertyList>
